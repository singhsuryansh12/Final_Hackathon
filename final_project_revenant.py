# -*- coding: utf-8 -*-
"""Final_project_revenant.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19yl-pILEimi8nkUTB4BXaRG1EdfZlFjc
"""

import numpy as np
import pandas as pd

df1 = pd.read_csv('Database_2.csv')

df1.head(10)

!pip install tika

from tika import parser

raw=parser.from_file("/content/Profile.pdf")   #user input pdf
k=raw['content']
m=k.splitlines()
r=set(m)
lst=[]
for i in range(len(m)):
  if m[i]!='':
    lst.append(m[i])
ts=lst.index('Top Skills')
ln=ts+4
s1=[]
for i in range(ts+1,ln):
  s1.append(lst[i])

test=" ".join(s1)
test

test = test.lower()
ls=[]

def get_jaccard_sim(str1, str2):              #jacard similarity
    a = set(str1.split()) 
    b = set(str2.split())
    c = a.intersection(b)
    return float(len(c)) / (len(a) + len(b) - len(c))

for j in range(len(df1)):
   ls.append(get_jaccard_sim(test,df1.skill_s[j]))

df1['jacard'] = ls
g = set(ls)
final = list(g)
final.sort(reverse=True)

t=[]
y=[]

for d in range(len(final)-1):
  t = df1[df1['jacard']==final[d]].jobtitle
  r = set(t)
  y.append(list(r))

y=list(y)

print("You can apply for the following Job Profiles :")
for i in range(len(y)):
  print(i+1," - ",y[i][0])

print("**************************************************")
print("But you need to work on these skills:")
more = []
j=[]
for u in range(len(y)):
  j = df1[df1.jobtitle==y[u][0]].skill_s
  f = set(j)
  more.append(list(f))

w=[]
w = test.split(" ")
new_skill =[]
for i in range(len(y)):
  x =[]
  x=more[i][0].split(" ")
  new_skill.append([item for item in x if item not in w])

for i in range(len(y)):
  print('You need to develop these skills to improve your profile for ',y[i][0]," :",new_skill[i])

ind = "IT-Software "                   #user input industry 
#jobs = [] 
#for i in range(10):
s=list((df1[df1.industry==ind].jobtitle))
#d = list(jobs)
s=set(s)
s = list(s)
print("The Job profiles available in the industry of your interest: ") 
for i in range(len(s)):
  print(s[i])
print("Which job you are interested in? ")

jobb = "Java Developer"   #user selected job
sk=[]

sk=list((df1[df1.jobtitle==jobb].skill_s))
sk = set(sk)
sk=list(sk)
sk="".join(sk)
print('We recommend you to develop the following skills according to the job you selected:')
print(sk)

#recommended skills
str_rc=sk
str_us=test
sm=get_jaccard_sim(str_rc,str_us)
print(sm)
if sm==0.0:
  print("We recommend you to develop the mentioned skills")
else:
  print("You have developed ",sm*100," % of the required skills. We advise you to develop the skills mentioned.")

df1.head()

